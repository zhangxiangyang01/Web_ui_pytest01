{"name": "test_login", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_login.TestLogin object at 0x000002559F04A4C8>, username = '18339052997', pwd = 'Zz0103'\n\n    def test_login(self, username=\"18339052997\", pwd=\"Zz0103\"):\n        self.login.page_click_skip()\n        self.login.page_click_me()\n        self.login.page_click_go_login()\n    \n        self.login.page_input_username(username)\n        self.login.page_input_password(pwd)\n        self.login.page_click_login_btn()\n    \n        aa = self.login.page_get_self_name()\n    \n        self.login.page_click_setting()\n>       self.login.page_click_loginout()\n\nScripts\\test_login.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nPage\\page_login.py:41: in page_click_loginout\n    self.base_click(Page.login_loginout_button)\nBase\\base.py:14: in base_click\n    self.base_find_ele(loc).click()\nBase\\base.py:11: in base_find_ele\n    return WebDriverWait(self.driver, timeout=timeout, poll_frequency=poll).until(lambda x: x.find_element(*loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"515f3bcc-81ee-4d09-a7de-ec63d246a595\")>, method = <function Base.base_find_ele.<locals>.<lambda> at 0x000002559F0455E8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nd:\\python\\python37\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1582808215630, "stop": 1582808257416, "uuid": "c8368c14-5a76-409d-a781-11b6148d5eea", "historyId": "d43a51bd8f39451b0dff2e529ebaa32e", "testCaseId": "ee9a2f637e60d33c2e1f70cb6dbdc6e8", "fullName": "Scripts.test_login.TestLogin#test_login", "labels": [{"name": "parentSuite", "value": "Scripts"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-LSEEA95"}, {"name": "thread", "value": "113260-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Scripts.test_login"}]}